{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","username","PostInfo","post","title","length","PostList","posts","postsFromServer","postId","commentsFromServer","filter","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"w38IAEaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,mBAAGA,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,IAGF,eAED,wBAAQE,UAAU,oBAAlB,SAAuCH,IAEvC,mBAAGG,UAAU,oBAAb,SAAkCD,QCTzBG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,QAAGC,KAAkBV,GAArB,EAAWW,SAAX,EAAqBX,MAAMC,EAA3B,EAA2BA,MAA3B,OACtB,4CAGE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCHMY,G,MAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOJ,EAAlB,EAAkBA,KAAMR,EAAxB,EAAwBA,KAAMI,EAA9B,EAA8BA,SAA9B,OACtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEhCJ,GACC,cAAC,EAAD,CAAUA,KAAMA,OAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGH,uBAEsB,IAApBI,EAASS,OACN,mBAAG,UAAQ,oBAAX,6BACA,cAAC,EAAD,CAAaT,SAAUA,SCnBnBU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMV,KAAI,SAAAM,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKL,WCW/B,IAAMS,EAAQC,EAAgBX,KAAI,SAAAM,GAAI,kCACxCA,GADwC,IAE3CP,UAZ0Ba,EAYGN,EAAKL,GAX3BY,EAAmBC,QAAO,SAAAtB,GAAO,OAAIA,EAAQoB,SAAWA,MAC5D,MAWHT,MARsBY,EAQDT,EAAKS,OAPnBC,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKF,KAAOc,MAC7C,QAFL,IAAwBA,EALIH,KAgBfM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ae66e8e.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n      {email}\n    </a>\n\n    {' commented: '}\n\n    <strong className=\"CommentInfo__name\">{name}</strong>\n\n    <p className=\"CommentInfo__body\">{body}</p>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { username, name, email } }) => (\n  <p>\n    {` Posted by `}\n\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  </p>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: { title, user, body, comments } }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    {(comments.length === 0)\n      ? (<b data-cy=\"NoCommentsMessage\">No comments yet</b>)\n      : (<CommentList comments={comments} />)\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getCommentsForPost(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n  || null;\n}\n\nfunction getUserForPost(userId) {\n  return usersFromServer.find(user => user.id === userId)\n  || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  comments: getCommentsForPost(post.id),\n  user: getUserForPost(post.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}